{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/stores/markers.js","../../src/stores/audio.js","../../node_modules/svelte-feather-icons/src/icons/EditIcon.svelte","../../node_modules/svelte-feather-icons/src/icons/PauseIcon.svelte","../../node_modules/svelte-feather-icons/src/icons/PlayIcon.svelte","../../node_modules/svelte-feather-icons/src/icons/RepeatIcon.svelte","../../node_modules/svelte-feather-icons/src/icons/Trash2Icon.svelte","../../node_modules/svelte-feather-icons/src/icons/XIcon.svelte","../../src/format.js","../../src/stores/loop.js","../../src/AudioPlayer.svelte","../../src/FilePicker.svelte","../../src/Markers.svelte","../../src/App.svelte","../../src/storage.js","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value' || descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.setAttribute('aria-hidden', 'true');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next, lookup.has(block.key));\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.20.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { derived, get, writable } from 'svelte/store';\n\n/**\n * @typedef Marker\n * @type {object}\n * @property {number} id\n * @property {number} time\n * @property {boolean} enabled\n * @property {string} text\n */\n\nlet globalId = 0;\n\nfunction createStore() {\n    /**\n     * @type {Marker[]}\n     */\n    const defaultValue = [];\n    const store = writable(defaultValue)\n    const { subscribe, set, update } = store;\n\n    const enabledMarkers = derived(store, markers => markers.filter(m => m.enabled));\n\n    /**\n     * \n     * @param {HTMLAudioElement} audio \n     */\n    function getLoopRanges(audio) {\n        /**\n         * @type {Marker[]}\n         */\n        const markers = get(enabledMarkers);\n\n        if (!markers.length) {\n            return [[0, audio.duration]];\n        }\n\n        return markers.map(m => getMarkerRange(m.id, audio));\n    }\n\n    /**\n     * \n     * @param {number} markerId\n     * @param {HTMLAudioElement} audio\n     */\n    function getMarkerRange(markerId, audio) {\n        /**\n         * @type {Marker[]}\n         */\n        const markers = get(store);\n        const index = markers.findIndex(m => m.id === markerId);\n\n        if (index === -1) {\n            throw new Error('[getMarkerRange] Wrong markerId.')\n        }\n\n        const endTime = index === markers.length - 1 ? audio.duration : markers[index + 1].time\n\n        return [markers[index].time, endTime];\n    }\n\n    /**\n     * \n     * @param {HTMLAudioElement} audio\n     */\n    function getCurrentMarker(audio) {\n        /**\n         * @type {Marker[]}\n         */\n        const markers = get(store);\n        const beforeAudio = markers.filter(m => m.time <= audio.currentTime);\n\n        return beforeAudio[beforeAudio.length - 1];\n    }\n\n    return {\n        subscribe,\n        set,\n        add(time, text = '') {\n            update(\n                existingMarkers => [\n                    ...existingMarkers,\n                    { id: globalId++, time, enabled: false, text }\n                ].sort((m1, m2) => m1.time - m2.time),\n            );\n        },\n        remove(id) {\n            update(existingMarkers => existingMarkers.filter(m => m.id !== id));\n        },\n        enabledMarkers,\n        getLoopRanges,\n        getCurrentMarker,\n        /**\n         * @param {HTMLAudioElement} audio\n         * @param {Marker} marker\n         */\n        isCurrentMarker(audio, marker) {\n            const current = getCurrentMarker(audio);\n            return !!current && current.id === marker.id;\n        }\n    };\n}\n\nexport default createStore();","import { get, writable, derived } from 'svelte/store';\n\n/**\n * @typedef {import('./markers').Marker} Marker\n */\n\nfunction createStore() {\n    /**\n     * @type {HTMLMediaElement}\n     */\n    const defaultValue = null;\n    const store = writable(defaultValue);\n    const { subscribe, set, update } = store;\n    let timeoutId;\n\n    function clear() {\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n    }\n\n    let _audioEventUnsubscriber;\n\n    return {\n        paused: derived(store, audio => !audio || audio.paused),\n        subscribe,\n        update,\n        reset() {\n            const current = get(store);\n            if (current) {\n                current.pause();\n            }\n            if (_audioEventUnsubscriber) {\n                _audioEventUnsubscriber();\n                _audioEventUnsubscriber = null;\n            }\n            set(null);\n        },\n        /**\n         * \n         * @param {HTMLMediaElement} val \n         */\n        set(val) {\n            const _audioEventCallback = () => set(val);\n            val.addEventListener(\"loadedmetadata\", _audioEventCallback);\n            val.addEventListener(\"timeupdate\", _audioEventCallback);\n\n            _audioEventUnsubscriber = () => {\n                val.removeEventListener(\"loadedmetadata\", _audioEventCallback);\n                val.removeEventListener(\"timeupdate\", _audioEventCallback);\n            }\n        },\n        play() {\n            const audio = get(store);\n            if (!audio) return;\n\n            audio.play();\n            clear();\n        },\n        /**\n         * \n         * @param {Marker} marker \n         */\n        playFromMarker(marker) {\n            const audio = get(store);\n            audio.currentTime = marker.time;\n            this.play();\n        },\n        pause() {\n            const audio = get(store);\n            if (!audio) return;\n\n            audio.pause();\n            clear();\n        },\n        loop(from, to) {\n            const audio = get(store);\n            if (!audio) return;\n\n            clear();\n            audio.currentTime = from;\n            audio.play();\n            timeoutId = setTimeout(() => {\n                timeoutId = null;\n                this.loop(from, to);\n            }, (to - from) * 1000);\n        }\n    };\n}\n\nexport default createStore();","<script>\n  export let size = \"100%\";\n  let customClass = \"\";\n  export { customClass as class };\n\n  if (size !== \"100%\") {\n    size = size.slice(-1) === 'x' \n          ? size.slice(0, size.length -1) + 'em'\n          : parseInt(size) + 'px';\n  }\n</script>\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" width={size} height={size} fill=\"none\" viewBox=\"0 0 24 24\"  stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-edit {customClass}\"><path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path><path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path></svg>\n","<script>\n  export let size = \"100%\";\n  let customClass = \"\";\n  export { customClass as class };\n\n  if (size !== \"100%\") {\n    size = size.slice(-1) === 'x' \n          ? size.slice(0, size.length -1) + 'em'\n          : parseInt(size) + 'px';\n  }\n</script>\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" width={size} height={size} fill=\"none\" viewBox=\"0 0 24 24\"  stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-pause {customClass}\"><rect x=\"6\" y=\"4\" width=\"4\" height=\"16\"></rect><rect x=\"14\" y=\"4\" width=\"4\" height=\"16\"></rect></svg>\n","<script>\n  export let size = \"100%\";\n  let customClass = \"\";\n  export { customClass as class };\n\n  if (size !== \"100%\") {\n    size = size.slice(-1) === 'x' \n          ? size.slice(0, size.length -1) + 'em'\n          : parseInt(size) + 'px';\n  }\n</script>\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" width={size} height={size} fill=\"none\" viewBox=\"0 0 24 24\"  stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-play {customClass}\"><polygon points=\"5 3 19 12 5 21 5 3\"></polygon></svg>\n","<script>\n  export let size = \"100%\";\n  let customClass = \"\";\n  export { customClass as class };\n\n  if (size !== \"100%\") {\n    size = size.slice(-1) === 'x' \n          ? size.slice(0, size.length -1) + 'em'\n          : parseInt(size) + 'px';\n  }\n</script>\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" width={size} height={size} fill=\"none\" viewBox=\"0 0 24 24\"  stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-repeat {customClass}\"><polyline points=\"17 1 21 5 17 9\"></polyline><path d=\"M3 11V9a4 4 0 0 1 4-4h14\"></path><polyline points=\"7 23 3 19 7 15\"></polyline><path d=\"M21 13v2a4 4 0 0 1-4 4H3\"></path></svg>\n","<script>\n  export let size = \"100%\";\n  let customClass = \"\";\n  export { customClass as class };\n\n  if (size !== \"100%\") {\n    size = size.slice(-1) === 'x' \n          ? size.slice(0, size.length -1) + 'em'\n          : parseInt(size) + 'px';\n  }\n</script>\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" width={size} height={size} fill=\"none\" viewBox=\"0 0 24 24\"  stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-trash-2 {customClass}\"><polyline points=\"3 6 5 6 21 6\"></polyline><path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path><line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line><line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line></svg>\n","<script>\n  export let size = \"100%\";\n  let customClass = \"\";\n  export { customClass as class };\n\n  if (size !== \"100%\") {\n    size = size.slice(-1) === 'x' \n          ? size.slice(0, size.length -1) + 'em'\n          : parseInt(size) + 'px';\n  }\n</script>\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" width={size} height={size} fill=\"none\" viewBox=\"0 0 24 24\"  stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-x {customClass}\"><line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line><line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line></svg>\n","/**\n * \n * @param {number} time \n * @param {boolean} displayMs \n */\nexport function formatTime(time, displayMs = false) {\n    const hours = Math.floor(time / 60 / 60);\n    const minutes = Math.floor((time - hours * 60 * 60) / 60);\n    const seconds = Math.floor(time - minutes * 60 - hours * 60 * 60);\n    const milliseconds = Math.floor(1000 * (time - (seconds + minutes * 60 - hours * 60 * 60)));\n    const pad = (n, l = 2) => n.toString().padStart(l, '0');\n\n    let result = '';\n    if (hours) {\n        result += pad(hours) + ':';\n    }\n    return (hours ? pad(hours) + ':' : '')\n        + pad(minutes) + ':'\n        + pad(seconds)\n        + (displayMs ? '.' + pad(milliseconds, 3) : '');\n}","import { get, writable } from 'svelte/store';\nimport markersStore from './markers';\nimport audioStore from './audio';\n\n/**\n * @typedef {import('./markers').Marker} Marker\n */\n\nfunction createStore() {\n    let timeoutId;\n    let audioUnsubscriber;\n    let markersUnsubscriber;\n    const store = writable(false);\n    const { subscribe, set } = store;\n\n    function clear() {\n        clearLoops();\n        if (audioUnsubscriber) {\n            audioUnsubscriber();\n            audioUnsubscriber = null;\n        }\n    }\n\n    function clearLoops() {\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        if (markersUnsubscriber) {\n            markersUnsubscriber();\n            markersUnsubscriber = null;\n        }\n    }\n\n    /**\n     * @param {HTMLAudioElement} audio\n     * @param {number[]} range\n     */\n    function safeSetCurrentTime(audio, range) {\n        const [from, to] = range;\n\n        if (audio.currentTime >= from && audio.currentTime < to ) return;\n\n        audio.currentTime = from;\n    }\n\n    /**\n     * \n     * @param {HTMLAudioElement} audio \n     */\n    function loop(audio) {\n        clearLoops();\n        const current = markersStore.getCurrentMarker(audio);\n        const ranges = markersStore.getLoopRanges(audio);\n        const currentRangeIndex = current && current.enabled\n            ? ranges.findIndex(r => r[0] == current.time)\n            : 0;\n        const [_from, to] = ranges[currentRangeIndex];\n        const nextRangeIndex = currentRangeIndex === ranges.length - 1 ? 0 : currentRangeIndex + 1;\n\n        safeSetCurrentTime(audio, ranges[currentRangeIndex]);\n\n        timeoutId = setTimeout(() => {\n            timeoutId = null;\n            safeSetCurrentTime(audio, ranges[nextRangeIndex]);\n            loop(audio);\n        }, (to - audio.currentTime) * 1000);\n    }\n\n    return {\n        subscribe,\n        toggle() {\n            get(store) ? this.stop() : this.start();\n        },\n        start() {\n            set(true);\n            const audio = get(audioStore);\n\n            audioUnsubscriber = audioStore.paused.subscribe(paused => {\n                if (paused) {\n                    return clearLoops();\n                }\n\n                markersUnsubscriber = markersStore.subscribe(() => loop(audio));\n            });\n\n        },\n        stop() {\n            set(false);\n            clear();\n        },\n    };\n}\n\nexport default createStore();","<script>\n    import { createEventDispatcher } from 'svelte';\n    import { PauseIcon, PlayIcon, RepeatIcon, XIcon } from 'svelte-feather-icons';\n    import { formatTime } from './format';\n    import audio from './stores/audio';\n    import loop from './stores/loop';\n\n    $: current = $audio && $audio.currentTime;\n    $: duration = $audio && $audio.duration;\n    $: paused = $audio && $audio.paused;\n    $: displayCurrent = formatTime(current);\n    $: displayDuration = formatTime(duration);\n\n    const dispatcher = createEventDispatcher();\n\n    function rangeChange(event) {\n        const newValue = event.target.value;\n        $audio.currentTime = newValue;\n    }\n</script>\n\n<div class=\"player row\">\n    <span class=\"col-sm-4 col-lg-1\">{displayCurrent} / {displayDuration}</span>\n\n    <span class=\"col-sm-5 col-lg-2\">\n        {#if paused}\n            <button on:click={() => audio.play()}><PlayIcon size=\"18\" /></button>\n        {:else}\n            <button on:click={() => audio.pause()}><PauseIcon size=\"18\" /></button>\n        {/if}\n        <button on:click={() => loop.toggle()} class:active={$loop}><RepeatIcon size=\"18\" /></button>\n    </span>\n\n    <input class=\"col-sm-first col-lg-normal col-lg-8 col-sm-12\" type=\"range\" min={0} max={duration} value={current} on:input={rangeChange}>\n\n    <button class=\"col-lg-1 col-sm-2 col-md-offset-5 col-lg-offset-0\" on:click={() => dispatcher('reset')}><XIcon size=\"18\" /></button>\n</div>\n\n<style>\n    .player {\n        padding-top: 1rem;\n        align-items: center;\n    }\n    span {\n        min-width: 135px;\n        max-width: 150px;\n    }\n    button, button:focus {\n        background: none;\n    }\n    button {\n        line-height: 0;\n        margin: 1rem 0;\n    }\n    .active {\n        color: #1976d2;\n    }\n    input {\n        -webkit-appearance: none;\n        height: 15px;\n        border-radius: 5px;\n        background: #d3d3d3;\n        outline: none;\n        opacity: 0.7;\n        -webkit-transition: .2s;\n        transition: opacity .2s;\n    }\n\n    input::-webkit-slider-thumb {\n        -webkit-appearance: none;\n        appearance: none;\n        width: 25px;\n        height: 25px;\n        border-radius: 50%;\n        background: #1976d2;\n        cursor: pointer;\n    }\n\n    input::-moz-range-thumb {\n        width: 25px;\n        height: 25px;\n        border-radius: 50%;\n        background: #1976d2;\n        cursor: pointer;\n    }\n</style>","<script>\n    import { createEventDispatcher } from 'svelte';\n\n    let inputFile;\n\n    const dispatcher = createEventDispatcher();\n</script>\n\n<div class=\"file-picker\">\n    <button class=\"primary\" on:click={() => inputFile.click()}>Choisir un fichier</button>\n    <input bind:this={inputFile} type=\"file\" on:change={evt => dispatcher('file', evt.target.files[0])} accept=\".mp3\" />\n</div>\n\n<style>\n    input {\n        display: none;\n    }\n    .file-picker {\n        text-align: center;\n        margin-top: 40vh;\n    }\n</style>","<script>\n    import { createEventDispatcher } from 'svelte';\n    import { EditIcon , Trash2Icon } from 'svelte-feather-icons';\n    import { get } from 'svelte/store';\n    import { formatTime } from './format';\n    import markers from './stores/markers';\n    import audio from './stores/audio';\n\n    let editMode = false;\n\n    const dispatcher = createEventDispatcher();\n</script>\n\n{#if $markers.length}\n    <h2>\n        Marqueurs :\n        <button class=\"no-background\" on:click={() => { editMode = !editMode; }}>\n            <EditIcon size=\"18\" />\n        </button>\n    </h2>\n\n    {#each $markers as marker (marker.id)}\n    <div class=\"row\" class:editMode class:active={markers.isCurrentMarker($audio, marker)}>\n        {#if !editMode}\n            <input type=\"checkbox\" bind:checked={marker.enabled}>\n        {/if}\n\n        {#if editMode}\n            <span class=\"marker-time\">{formatTime(marker.time, true)}</span>\n        {:else}\n            <span class=\"marker-time clickable\" on:click={() => dispatcher('play', marker)}>\n                {formatTime(marker.time)}\n            </span>\n        {/if}\n\n        {#if editMode}\n            <input type=\"text\" class=\"col-sm-6\" bind:value={marker.text} placeholder=\"Description...\"/>\n        {:else}\n            <span class=\"clickable\" on:click={() => dispatcher('play', marker)}>{marker.text || 'Aucun titre'}</span>\n        {/if}\n        {#if editMode}\n            <button class=\"no-background\" on:click={() => markers.remove(marker.id)}><Trash2Icon size=\"18\" /></button>\n        {/if}\n    </div>\n    {/each}\n{/if}\n\n<div class=\"add-marker\">\n    <button on:click={() => dispatcher('addMarker')}>Ajouter un marqueur</button>\n</div>\n\n\n<style>\n    .row {\n        align-items: center;\n    }\n    .row.active {\n        font-weight: bold;\n    }\n    .no-background {\n        background: none;\n        line-height: 0;\n    }\n    .add-marker {\n        text-align: center;\n        margin-top: 1rem;\n    }\n    .clickable {\n        cursor: pointer;\n    }\n    .clickable:hover {\n        text-decoration: underline;\n    }\n    .row.editMode .marker-time {\n        min-width: 5rem;\n    }\n    .marker-time {\n        display: inline-block;\n        min-width: 4rem;\n        margin-left: 1rem;\n    }\n</style>","<script>\n    import { get } from 'svelte/store';\n    import { loadMarkers, saveMarkers } from './storage';\n    import markers from './stores/markers';\n    import audio from './stores/audio';\n    import AudioPlayer from './AudioPlayer.svelte';\n    import FilePicker from './FilePicker.svelte';\n    import Markers from './Markers.svelte';\n\n    let file = null;\n    let saveUnsubscriber;\n\n    const { enabledMarkers, loopRange } = markers;\n\n    function onFileSelected(event) {\n        if (saveUnsubscriber) {\n            saveUnsubscriber();\n        }\n\n        file = event.detail;\n        audio.set(new Audio(URL.createObjectURL(file)));\n        loadMarkers(file.name)\n            .forEach(({ time, text }) => markers.add(time, text));\n\n        saveUnsubscriber = markers.subscribe(saveMarkers(file.name));\n    }\n\n    function reset() {\n        audio.reset();\n        saveUnsubscriber();\n        saveUnsubscriber = null;\n        markers.set([]);\n    }\n\n    function addMarker() {\n        markers.add($audio.currentTime);\n    }\n\n    document.addEventListener('keyup', event => {\n        if (event.key !== 'Enter' || !$audio) return;\n        addMarker();\n    })\n</script>\n\n<main class=\"container\">\n    {#if $audio}\n        <AudioPlayer on:reset={reset} />\n        <Markers on:play={event => audio.playFromMarker(event.detail)} on:addMarker={addMarker}></Markers>\n    {:else}\n        <FilePicker on:file={onFileSelected} />\n    {/if}\n</main>"," /**\n * @typedef {import('./stores/markers').Marker} Marker\n */\n\n/**\n * \n * @param {string} filename\n */\nexport function loadMarkers(filename) {\n    const markersString = localStorage.getItem(`track:${filename}`);\n    if (!markersString) return [];\n    return markersString\n        .split('|')\n        .map(part => part.split(':'))\n        .map(([time, text]) => ({ time: Number(time), text: JSON.parse(text) }))\n}\n\n/**\n * \n * @param {string} filename\n */\nexport function saveMarkers(filename) {\n    /**\n     * @param {Marker[]} markers\n     */\n    function _saveMarkers(markers) {\n        const markersString = markers.map(({ time, text }) => `${time}:${JSON.stringify(text)}`).join('|');\n        localStorage.setItem(`track:${filename}`, markersString);\n    }\n\n    return _saveMarkers;\n}","import App from './App.svelte';\nimport 'mini.css/dist/mini-default.min.css';\n\n// https://favicon.io/favicon-generator/?t=Tick&ff=Leckerli+One&fs=70&fc=%23FFFFFF&b=rounded&bc=%232D882D\n\nconst app = new App({\n\ttarget: document.body,\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","get_store_value","value","_","component_subscribe","component","callback","$$","on_destroy","push","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","set_input_value","input","toggle_class","toggle","classList","current_component","set_current_component","createEventDispatcher","Error","get_current_component","type","detail","e","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","i","length","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","outro_and_destroy_block","lookup","key","create_component","mount_component","on_mount","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","index","indexOf","splice","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","unsubscribers","globalId","enabledMarkers","markers","enabled","getCurrentMarker","audio","beforeAudio","get","time","currentTime","existingMarkers","id","sort","m1","m2","getLoopRanges","markerId","findIndex","endTime","duration","getMarkerRange","marker","current","createStore","timeoutId","_audioEventUnsubscriber","clearTimeout","paused","pause","val","_audioEventCallback","play","to","setTimeout","loop","size","customClass","parseInt","formatTime","displayMs","hours","Math","floor","minutes","seconds","milliseconds","pad","n","toString","padStart","audioUnsubscriber","markersUnsubscriber","clearLoops","safeSetCurrentTime","range","audioStore","markersStore","ranges","currentRangeIndex","_from","nextRangeIndex","dispatcher","$audio","displayCurrent","displayDuration","newValue","inputFile","click","evt","files","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","old_indexes","new_blocks","new_lookup","deltas","child_ctx","abs","will_move","did_move","first","new_block","old_block","new_key","old_key","isCurrentMarker","editMode","remove","saveUnsubscriber","file","loopRange","addMarker","filename","Audio","URL","createObjectURL","markersString","localStorage","getItem","split","part","Number","JSON","parse","loadMarkers","stringify","join","setItem","reset","playFromMarker","body"],"mappings":"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"}